// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.25.1
// source: scylla/lol/participantdetail/v1/participantdetail.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ScyllaParticipantdetailServiceClient is the client API for ScyllaParticipantdetailService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ScyllaParticipantdetailServiceClient interface {
	// Participantdetails
	GetMatchParticipantsdetail(ctx context.Context, in *ScyllaGetParticipantdetailsReq, opts ...grpc.CallOption) (*ScyllaParticipantdetails, error)
	GetParticipantdetail(ctx context.Context, in *ScyllaParticipantdetailReq, opts ...grpc.CallOption) (*ScyllaParticipantdetail, error)
	UpsertParticipantdetail(ctx context.Context, in *ScyllaUpsertParticipantdetailReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DeleteParticipantdetail(ctx context.Context, in *ScyllaParticipantdetailReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type scyllaParticipantdetailServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewScyllaParticipantdetailServiceClient(cc grpc.ClientConnInterface) ScyllaParticipantdetailServiceClient {
	return &scyllaParticipantdetailServiceClient{cc}
}

func (c *scyllaParticipantdetailServiceClient) GetMatchParticipantsdetail(ctx context.Context, in *ScyllaGetParticipantdetailsReq, opts ...grpc.CallOption) (*ScyllaParticipantdetails, error) {
	out := new(ScyllaParticipantdetails)
	err := c.cc.Invoke(ctx, "/scylla.lol.participantdetail.v1.ScyllaParticipantdetailService/GetMatchParticipantsdetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scyllaParticipantdetailServiceClient) GetParticipantdetail(ctx context.Context, in *ScyllaParticipantdetailReq, opts ...grpc.CallOption) (*ScyllaParticipantdetail, error) {
	out := new(ScyllaParticipantdetail)
	err := c.cc.Invoke(ctx, "/scylla.lol.participantdetail.v1.ScyllaParticipantdetailService/GetParticipantdetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scyllaParticipantdetailServiceClient) UpsertParticipantdetail(ctx context.Context, in *ScyllaUpsertParticipantdetailReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/scylla.lol.participantdetail.v1.ScyllaParticipantdetailService/UpsertParticipantdetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scyllaParticipantdetailServiceClient) DeleteParticipantdetail(ctx context.Context, in *ScyllaParticipantdetailReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/scylla.lol.participantdetail.v1.ScyllaParticipantdetailService/DeleteParticipantdetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ScyllaParticipantdetailServiceServer is the server API for ScyllaParticipantdetailService service.
// All implementations must embed UnimplementedScyllaParticipantdetailServiceServer
// for forward compatibility
type ScyllaParticipantdetailServiceServer interface {
	// Participantdetails
	GetMatchParticipantsdetail(context.Context, *ScyllaGetParticipantdetailsReq) (*ScyllaParticipantdetails, error)
	GetParticipantdetail(context.Context, *ScyllaParticipantdetailReq) (*ScyllaParticipantdetail, error)
	UpsertParticipantdetail(context.Context, *ScyllaUpsertParticipantdetailReq) (*emptypb.Empty, error)
	DeleteParticipantdetail(context.Context, *ScyllaParticipantdetailReq) (*emptypb.Empty, error)
	mustEmbedUnimplementedScyllaParticipantdetailServiceServer()
}

// UnimplementedScyllaParticipantdetailServiceServer must be embedded to have forward compatible implementations.
type UnimplementedScyllaParticipantdetailServiceServer struct {
}

func (UnimplementedScyllaParticipantdetailServiceServer) GetMatchParticipantsdetail(context.Context, *ScyllaGetParticipantdetailsReq) (*ScyllaParticipantdetails, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMatchParticipantsdetail not implemented")
}
func (UnimplementedScyllaParticipantdetailServiceServer) GetParticipantdetail(context.Context, *ScyllaParticipantdetailReq) (*ScyllaParticipantdetail, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetParticipantdetail not implemented")
}
func (UnimplementedScyllaParticipantdetailServiceServer) UpsertParticipantdetail(context.Context, *ScyllaUpsertParticipantdetailReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpsertParticipantdetail not implemented")
}
func (UnimplementedScyllaParticipantdetailServiceServer) DeleteParticipantdetail(context.Context, *ScyllaParticipantdetailReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteParticipantdetail not implemented")
}
func (UnimplementedScyllaParticipantdetailServiceServer) mustEmbedUnimplementedScyllaParticipantdetailServiceServer() {
}

// UnsafeScyllaParticipantdetailServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ScyllaParticipantdetailServiceServer will
// result in compilation errors.
type UnsafeScyllaParticipantdetailServiceServer interface {
	mustEmbedUnimplementedScyllaParticipantdetailServiceServer()
}

func RegisterScyllaParticipantdetailServiceServer(s grpc.ServiceRegistrar, srv ScyllaParticipantdetailServiceServer) {
	s.RegisterService(&ScyllaParticipantdetailService_ServiceDesc, srv)
}

func _ScyllaParticipantdetailService_GetMatchParticipantsdetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScyllaGetParticipantdetailsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScyllaParticipantdetailServiceServer).GetMatchParticipantsdetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scylla.lol.participantdetail.v1.ScyllaParticipantdetailService/GetMatchParticipantsdetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScyllaParticipantdetailServiceServer).GetMatchParticipantsdetail(ctx, req.(*ScyllaGetParticipantdetailsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScyllaParticipantdetailService_GetParticipantdetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScyllaParticipantdetailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScyllaParticipantdetailServiceServer).GetParticipantdetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scylla.lol.participantdetail.v1.ScyllaParticipantdetailService/GetParticipantdetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScyllaParticipantdetailServiceServer).GetParticipantdetail(ctx, req.(*ScyllaParticipantdetailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScyllaParticipantdetailService_UpsertParticipantdetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScyllaUpsertParticipantdetailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScyllaParticipantdetailServiceServer).UpsertParticipantdetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scylla.lol.participantdetail.v1.ScyllaParticipantdetailService/UpsertParticipantdetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScyllaParticipantdetailServiceServer).UpsertParticipantdetail(ctx, req.(*ScyllaUpsertParticipantdetailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScyllaParticipantdetailService_DeleteParticipantdetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScyllaParticipantdetailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScyllaParticipantdetailServiceServer).DeleteParticipantdetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scylla.lol.participantdetail.v1.ScyllaParticipantdetailService/DeleteParticipantdetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScyllaParticipantdetailServiceServer).DeleteParticipantdetail(ctx, req.(*ScyllaParticipantdetailReq))
	}
	return interceptor(ctx, in, info, handler)
}

// ScyllaParticipantdetailService_ServiceDesc is the grpc.ServiceDesc for ScyllaParticipantdetailService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ScyllaParticipantdetailService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "scylla.lol.participantdetail.v1.ScyllaParticipantdetailService",
	HandlerType: (*ScyllaParticipantdetailServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMatchParticipantsdetail",
			Handler:    _ScyllaParticipantdetailService_GetMatchParticipantsdetail_Handler,
		},
		{
			MethodName: "GetParticipantdetail",
			Handler:    _ScyllaParticipantdetailService_GetParticipantdetail_Handler,
		},
		{
			MethodName: "UpsertParticipantdetail",
			Handler:    _ScyllaParticipantdetailService_UpsertParticipantdetail_Handler,
		},
		{
			MethodName: "DeleteParticipantdetail",
			Handler:    _ScyllaParticipantdetailService_DeleteParticipantdetail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "scylla/lol/participantdetail/v1/participantdetail.proto",
}
