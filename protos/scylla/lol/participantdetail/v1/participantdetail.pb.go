// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.1
// source: scylla/lol/participantdetail/v1/participantdetail.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScyllaUpsertParticipantdetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string                   `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Detail *ScyllaParticipantdetail `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *ScyllaUpsertParticipantdetailReq) Reset() {
	*x = ScyllaUpsertParticipantdetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScyllaUpsertParticipantdetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScyllaUpsertParticipantdetailReq) ProtoMessage() {}

func (x *ScyllaUpsertParticipantdetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScyllaUpsertParticipantdetailReq.ProtoReflect.Descriptor instead.
func (*ScyllaUpsertParticipantdetailReq) Descriptor() ([]byte, []int) {
	return file_scylla_lol_participantdetail_v1_participantdetail_proto_rawDescGZIP(), []int{0}
}

func (x *ScyllaUpsertParticipantdetailReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ScyllaUpsertParticipantdetailReq) GetDetail() *ScyllaParticipantdetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

type ScyllaParticipantdetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details []*ScyllaParticipantdetail `protobuf:"bytes,1,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ScyllaParticipantdetails) Reset() {
	*x = ScyllaParticipantdetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScyllaParticipantdetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScyllaParticipantdetails) ProtoMessage() {}

func (x *ScyllaParticipantdetails) ProtoReflect() protoreflect.Message {
	mi := &file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScyllaParticipantdetails.ProtoReflect.Descriptor instead.
func (*ScyllaParticipantdetails) Descriptor() ([]byte, []int) {
	return file_scylla_lol_participantdetail_v1_participantdetail_proto_rawDescGZIP(), []int{1}
}

func (x *ScyllaParticipantdetails) GetDetails() []*ScyllaParticipantdetail {
	if x != nil {
		return x.Details
	}
	return nil
}

type ScyllaGetParticipantdetailsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	GameId int64  `protobuf:"varint,2,opt,name=gameId,proto3" json:"gameId,omitempty"`
	Count  int32  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ScyllaGetParticipantdetailsReq) Reset() {
	*x = ScyllaGetParticipantdetailsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScyllaGetParticipantdetailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScyllaGetParticipantdetailsReq) ProtoMessage() {}

func (x *ScyllaGetParticipantdetailsReq) ProtoReflect() protoreflect.Message {
	mi := &file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScyllaGetParticipantdetailsReq.ProtoReflect.Descriptor instead.
func (*ScyllaGetParticipantdetailsReq) Descriptor() ([]byte, []int) {
	return file_scylla_lol_participantdetail_v1_participantdetail_proto_rawDescGZIP(), []int{2}
}

func (x *ScyllaGetParticipantdetailsReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ScyllaGetParticipantdetailsReq) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *ScyllaGetParticipantdetailsReq) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ScyllaParticipantdetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region        string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	GameId        int64  `protobuf:"varint,2,opt,name=gameId,proto3" json:"gameId,omitempty"`
	ParticipantId int32  `protobuf:"varint,3,opt,name=participantId,proto3" json:"participantId,omitempty"`
}

func (x *ScyllaParticipantdetailReq) Reset() {
	*x = ScyllaParticipantdetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScyllaParticipantdetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScyllaParticipantdetailReq) ProtoMessage() {}

func (x *ScyllaParticipantdetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScyllaParticipantdetailReq.ProtoReflect.Descriptor instead.
func (*ScyllaParticipantdetailReq) Descriptor() ([]byte, []int) {
	return file_scylla_lol_participantdetail_v1_participantdetail_proto_rawDescGZIP(), []int{3}
}

func (x *ScyllaParticipantdetailReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ScyllaParticipantdetailReq) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *ScyllaParticipantdetailReq) GetParticipantId() int32 {
	if x != nil {
		return x.ParticipantId
	}
	return 0
}

type ScyllaParticipantdetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId                         int64        `protobuf:"varint,1,opt,name=gameId,proto3" json:"gameId,omitempty"`
	ParticipantId                  int32        `protobuf:"varint,2,opt,name=participantId,proto3" json:"participantId,omitempty"`
	DamageDealtToBuildings         int32        `protobuf:"varint,3,opt,name=damageDealtToBuildings,proto3" json:"damageDealtToBuildings,omitempty"`
	DamageDealtToObjectives        int32        `protobuf:"varint,4,opt,name=damageDealtToObjectives,proto3" json:"damageDealtToObjectives,omitempty"`
	DamageDealtToTurrets           int32        `protobuf:"varint,5,opt,name=damageDealtToTurrets,proto3" json:"damageDealtToTurrets,omitempty"`
	DamageSelfMitigated            int32        `protobuf:"varint,6,opt,name=damageSelfMitigated,proto3" json:"damageSelfMitigated,omitempty"`
	MagicDamageDealt               int32        `protobuf:"varint,7,opt,name=magicDamageDealt,proto3" json:"magicDamageDealt,omitempty"`
	MagicDamageDealtToChampions    int32        `protobuf:"varint,8,opt,name=magicDamageDealtToChampions,proto3" json:"magicDamageDealtToChampions,omitempty"`
	MagicDamageTaken               int32        `protobuf:"varint,9,opt,name=magicDamageTaken,proto3" json:"magicDamageTaken,omitempty"`
	NeutralMinionsKilled           int32        `protobuf:"varint,10,opt,name=neutralMinionsKilled,proto3" json:"neutralMinionsKilled,omitempty"`
	Perks                          *ScyllaPerks `protobuf:"bytes,11,opt,name=perks,proto3" json:"perks,omitempty"`
	PhysicalDamageDealt            int32        `protobuf:"varint,12,opt,name=physicalDamageDealt,proto3" json:"physicalDamageDealt,omitempty"`
	PhysicalDamageDealtToChampions int32        `protobuf:"varint,13,opt,name=physicalDamageDealtToChampions,proto3" json:"physicalDamageDealtToChampions,omitempty"`
	PhysicalDamageTaken            int32        `protobuf:"varint,14,opt,name=physicalDamageTaken,proto3" json:"physicalDamageTaken,omitempty"`
	Spell1Casts                    int32        `protobuf:"varint,15,opt,name=spell1Casts,proto3" json:"spell1Casts,omitempty"`
	Spell2Casts                    int32        `protobuf:"varint,16,opt,name=spell2Casts,proto3" json:"spell2Casts,omitempty"`
	Spell3Casts                    int32        `protobuf:"varint,17,opt,name=spell3Casts,proto3" json:"spell3Casts,omitempty"`
	Spell4Casts                    int32        `protobuf:"varint,18,opt,name=spell4Casts,proto3" json:"spell4Casts,omitempty"`
	Summoner1Casts                 int32        `protobuf:"varint,19,opt,name=summoner1Casts,proto3" json:"summoner1Casts,omitempty"`
	Summoner2Casts                 int32        `protobuf:"varint,20,opt,name=summoner2Casts,proto3" json:"summoner2Casts,omitempty"`
	DamageTakenOnTeamPercentage    float32      `protobuf:"fixed32,21,opt,name=damageTakenOnTeamPercentage,proto3" json:"damageTakenOnTeamPercentage,omitempty"`
	MaxCsAdvantageOnLaneOpponent   float32      `protobuf:"fixed32,22,opt,name=maxCsAdvantageOnLaneOpponent,proto3" json:"maxCsAdvantageOnLaneOpponent,omitempty"`
	MaxLevelLeadLaneOpponent       float32      `protobuf:"fixed32,23,opt,name=maxLevelLeadLaneOpponent,proto3" json:"maxLevelLeadLaneOpponent,omitempty"`
}

func (x *ScyllaParticipantdetail) Reset() {
	*x = ScyllaParticipantdetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScyllaParticipantdetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScyllaParticipantdetail) ProtoMessage() {}

func (x *ScyllaParticipantdetail) ProtoReflect() protoreflect.Message {
	mi := &file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScyllaParticipantdetail.ProtoReflect.Descriptor instead.
func (*ScyllaParticipantdetail) Descriptor() ([]byte, []int) {
	return file_scylla_lol_participantdetail_v1_participantdetail_proto_rawDescGZIP(), []int{4}
}

func (x *ScyllaParticipantdetail) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *ScyllaParticipantdetail) GetParticipantId() int32 {
	if x != nil {
		return x.ParticipantId
	}
	return 0
}

func (x *ScyllaParticipantdetail) GetDamageDealtToBuildings() int32 {
	if x != nil {
		return x.DamageDealtToBuildings
	}
	return 0
}

func (x *ScyllaParticipantdetail) GetDamageDealtToObjectives() int32 {
	if x != nil {
		return x.DamageDealtToObjectives
	}
	return 0
}

func (x *ScyllaParticipantdetail) GetDamageDealtToTurrets() int32 {
	if x != nil {
		return x.DamageDealtToTurrets
	}
	return 0
}

func (x *ScyllaParticipantdetail) GetDamageSelfMitigated() int32 {
	if x != nil {
		return x.DamageSelfMitigated
	}
	return 0
}

func (x *ScyllaParticipantdetail) GetMagicDamageDealt() int32 {
	if x != nil {
		return x.MagicDamageDealt
	}
	return 0
}

func (x *ScyllaParticipantdetail) GetMagicDamageDealtToChampions() int32 {
	if x != nil {
		return x.MagicDamageDealtToChampions
	}
	return 0
}

func (x *ScyllaParticipantdetail) GetMagicDamageTaken() int32 {
	if x != nil {
		return x.MagicDamageTaken
	}
	return 0
}

func (x *ScyllaParticipantdetail) GetNeutralMinionsKilled() int32 {
	if x != nil {
		return x.NeutralMinionsKilled
	}
	return 0
}

func (x *ScyllaParticipantdetail) GetPerks() *ScyllaPerks {
	if x != nil {
		return x.Perks
	}
	return nil
}

func (x *ScyllaParticipantdetail) GetPhysicalDamageDealt() int32 {
	if x != nil {
		return x.PhysicalDamageDealt
	}
	return 0
}

func (x *ScyllaParticipantdetail) GetPhysicalDamageDealtToChampions() int32 {
	if x != nil {
		return x.PhysicalDamageDealtToChampions
	}
	return 0
}

func (x *ScyllaParticipantdetail) GetPhysicalDamageTaken() int32 {
	if x != nil {
		return x.PhysicalDamageTaken
	}
	return 0
}

func (x *ScyllaParticipantdetail) GetSpell1Casts() int32 {
	if x != nil {
		return x.Spell1Casts
	}
	return 0
}

func (x *ScyllaParticipantdetail) GetSpell2Casts() int32 {
	if x != nil {
		return x.Spell2Casts
	}
	return 0
}

func (x *ScyllaParticipantdetail) GetSpell3Casts() int32 {
	if x != nil {
		return x.Spell3Casts
	}
	return 0
}

func (x *ScyllaParticipantdetail) GetSpell4Casts() int32 {
	if x != nil {
		return x.Spell4Casts
	}
	return 0
}

func (x *ScyllaParticipantdetail) GetSummoner1Casts() int32 {
	if x != nil {
		return x.Summoner1Casts
	}
	return 0
}

func (x *ScyllaParticipantdetail) GetSummoner2Casts() int32 {
	if x != nil {
		return x.Summoner2Casts
	}
	return 0
}

func (x *ScyllaParticipantdetail) GetDamageTakenOnTeamPercentage() float32 {
	if x != nil {
		return x.DamageTakenOnTeamPercentage
	}
	return 0
}

func (x *ScyllaParticipantdetail) GetMaxCsAdvantageOnLaneOpponent() float32 {
	if x != nil {
		return x.MaxCsAdvantageOnLaneOpponent
	}
	return 0
}

func (x *ScyllaParticipantdetail) GetMaxLevelLeadLaneOpponent() float32 {
	if x != nil {
		return x.MaxLevelLeadLaneOpponent
	}
	return 0
}

type ScyllaPerks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatPerks *ScyllaPerkStats   `protobuf:"bytes,1,opt,name=statPerks,proto3" json:"statPerks,omitempty"`
	Styles    []*ScyllaPerkStyle `protobuf:"bytes,2,rep,name=styles,proto3" json:"styles,omitempty"`
}

func (x *ScyllaPerks) Reset() {
	*x = ScyllaPerks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScyllaPerks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScyllaPerks) ProtoMessage() {}

func (x *ScyllaPerks) ProtoReflect() protoreflect.Message {
	mi := &file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScyllaPerks.ProtoReflect.Descriptor instead.
func (*ScyllaPerks) Descriptor() ([]byte, []int) {
	return file_scylla_lol_participantdetail_v1_participantdetail_proto_rawDescGZIP(), []int{5}
}

func (x *ScyllaPerks) GetStatPerks() *ScyllaPerkStats {
	if x != nil {
		return x.StatPerks
	}
	return nil
}

func (x *ScyllaPerks) GetStyles() []*ScyllaPerkStyle {
	if x != nil {
		return x.Styles
	}
	return nil
}

type ScyllaPerkStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Defense int32 `protobuf:"varint,1,opt,name=defense,proto3" json:"defense,omitempty"`
	Flex    int32 `protobuf:"varint,2,opt,name=flex,proto3" json:"flex,omitempty"`
	Offense int32 `protobuf:"varint,3,opt,name=offense,proto3" json:"offense,omitempty"`
}

func (x *ScyllaPerkStats) Reset() {
	*x = ScyllaPerkStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScyllaPerkStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScyllaPerkStats) ProtoMessage() {}

func (x *ScyllaPerkStats) ProtoReflect() protoreflect.Message {
	mi := &file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScyllaPerkStats.ProtoReflect.Descriptor instead.
func (*ScyllaPerkStats) Descriptor() ([]byte, []int) {
	return file_scylla_lol_participantdetail_v1_participantdetail_proto_rawDescGZIP(), []int{6}
}

func (x *ScyllaPerkStats) GetDefense() int32 {
	if x != nil {
		return x.Defense
	}
	return 0
}

func (x *ScyllaPerkStats) GetFlex() int32 {
	if x != nil {
		return x.Flex
	}
	return 0
}

func (x *ScyllaPerkStats) GetOffense() int32 {
	if x != nil {
		return x.Offense
	}
	return 0
}

type ScyllaPerkStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string                      `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Selections  []*ScyllaPerkStyleSelection `protobuf:"bytes,2,rep,name=selections,proto3" json:"selections,omitempty"`
	Style       int32                       `protobuf:"varint,3,opt,name=style,proto3" json:"style,omitempty"`
}

func (x *ScyllaPerkStyle) Reset() {
	*x = ScyllaPerkStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScyllaPerkStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScyllaPerkStyle) ProtoMessage() {}

func (x *ScyllaPerkStyle) ProtoReflect() protoreflect.Message {
	mi := &file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScyllaPerkStyle.ProtoReflect.Descriptor instead.
func (*ScyllaPerkStyle) Descriptor() ([]byte, []int) {
	return file_scylla_lol_participantdetail_v1_participantdetail_proto_rawDescGZIP(), []int{7}
}

func (x *ScyllaPerkStyle) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ScyllaPerkStyle) GetSelections() []*ScyllaPerkStyleSelection {
	if x != nil {
		return x.Selections
	}
	return nil
}

func (x *ScyllaPerkStyle) GetStyle() int32 {
	if x != nil {
		return x.Style
	}
	return 0
}

type ScyllaPerkStyleSelection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Perk int32 `protobuf:"varint,1,opt,name=perk,proto3" json:"perk,omitempty"`
	Var1 int32 `protobuf:"varint,2,opt,name=var1,proto3" json:"var1,omitempty"`
	Var2 int32 `protobuf:"varint,3,opt,name=var2,proto3" json:"var2,omitempty"`
	Var3 int32 `protobuf:"varint,4,opt,name=var3,proto3" json:"var3,omitempty"`
}

func (x *ScyllaPerkStyleSelection) Reset() {
	*x = ScyllaPerkStyleSelection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScyllaPerkStyleSelection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScyllaPerkStyleSelection) ProtoMessage() {}

func (x *ScyllaPerkStyleSelection) ProtoReflect() protoreflect.Message {
	mi := &file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScyllaPerkStyleSelection.ProtoReflect.Descriptor instead.
func (*ScyllaPerkStyleSelection) Descriptor() ([]byte, []int) {
	return file_scylla_lol_participantdetail_v1_participantdetail_proto_rawDescGZIP(), []int{8}
}

func (x *ScyllaPerkStyleSelection) GetPerk() int32 {
	if x != nil {
		return x.Perk
	}
	return 0
}

func (x *ScyllaPerkStyleSelection) GetVar1() int32 {
	if x != nil {
		return x.Var1
	}
	return 0
}

func (x *ScyllaPerkStyleSelection) GetVar2() int32 {
	if x != nil {
		return x.Var2
	}
	return 0
}

func (x *ScyllaPerkStyleSelection) GetVar3() int32 {
	if x != nil {
		return x.Var3
	}
	return 0
}

var File_scylla_lol_participantdetail_v1_participantdetail_proto protoreflect.FileDescriptor

var file_scylla_lol_participantdetail_v1_participantdetail_proto_rawDesc = []byte{
	0x0a, 0x37, 0x73, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x2f, 0x6c, 0x6f, 0x6c, 0x2f, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x73, 0x63, 0x79, 0x6c, 0x6c,
	0x61, 0x2e, 0x6c, 0x6f, 0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x01, 0x0a, 0x20, 0x53, 0x63, 0x79, 0x6c,
	0x6c, 0x61, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x73, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x2e, 0x6c, 0x6f,
	0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x6e, 0x0a, 0x18, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x52, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x73, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x2e, 0x6c, 0x6f, 0x6c,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x66, 0x0a, 0x1e, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x72,
	0x0a, 0x1a, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x87, 0x09, 0x0a, 0x17, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x16,
	0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x74, 0x54, 0x6f, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x64, 0x61,
	0x6d, 0x61, 0x67, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x74, 0x54, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65,
	0x61, 0x6c, 0x74, 0x54, 0x6f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65, 0x61,
	0x6c, 0x74, 0x54, 0x6f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x32,
	0x0a, 0x14, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x74, 0x54, 0x6f, 0x54,
	0x75, 0x72, 0x72, 0x65, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x64, 0x61,
	0x6d, 0x61, 0x67, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x74, 0x54, 0x6f, 0x54, 0x75, 0x72, 0x72, 0x65,
	0x74, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6c, 0x66,
	0x4d, 0x69, 0x74, 0x69, 0x67, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x13, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x4d, 0x69, 0x74, 0x69, 0x67,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x44, 0x61, 0x6d,
	0x61, 0x67, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x6d, 0x61, 0x67, 0x69, 0x63, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x74,
	0x12, 0x40, 0x0a, 0x1b, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x44,
	0x65, 0x61, 0x6c, 0x74, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1b, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x44, 0x61, 0x6d, 0x61,
	0x67, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x74, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x44, 0x61, 0x6d, 0x61, 0x67,
	0x65, 0x54, 0x61, 0x6b, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6d, 0x61,
	0x67, 0x69, 0x63, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x61, 0x6b, 0x65, 0x6e, 0x12, 0x32,
	0x0a, 0x14, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x73,
	0x4b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x6e, 0x65,
	0x75, 0x74, 0x72, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x73, 0x4b, 0x69, 0x6c, 0x6c,
	0x65, 0x64, 0x12, 0x42, 0x0a, 0x05, 0x70, 0x65, 0x72, 0x6b, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x2e, 0x6c, 0x6f, 0x6c, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x50, 0x65, 0x72, 0x6b, 0x73, 0x52,
	0x05, 0x70, 0x65, 0x72, 0x6b, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63,
	0x61, 0x6c, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x13, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x6d,
	0x61, 0x67, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x74, 0x12, 0x46, 0x0a, 0x1e, 0x70, 0x68, 0x79, 0x73,
	0x69, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x74, 0x54,
	0x6f, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x1e, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65,
	0x44, 0x65, 0x61, 0x6c, 0x74, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x30, 0x0a, 0x13, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x6d, 0x61,
	0x67, 0x65, 0x54, 0x61, 0x6b, 0x65, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x70,
	0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x61, 0x6b,
	0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x31, 0x43, 0x61, 0x73, 0x74,
	0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x31, 0x43,
	0x61, 0x73, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x32, 0x43, 0x61,
	0x73, 0x74, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x70, 0x65, 0x6c, 0x6c,
	0x32, 0x43, 0x61, 0x73, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x33,
	0x43, 0x61, 0x73, 0x74, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x70, 0x65,
	0x6c, 0x6c, 0x33, 0x43, 0x61, 0x73, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x6c,
	0x6c, 0x34, 0x43, 0x61, 0x73, 0x74, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73,
	0x70, 0x65, 0x6c, 0x6c, 0x34, 0x43, 0x61, 0x73, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x75,
	0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x31, 0x43, 0x61, 0x73, 0x74, 0x73, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x31, 0x43, 0x61, 0x73,
	0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x32, 0x43,
	0x61, 0x73, 0x74, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x75, 0x6d, 0x6d,
	0x6f, 0x6e, 0x65, 0x72, 0x32, 0x43, 0x61, 0x73, 0x74, 0x73, 0x12, 0x40, 0x0a, 0x1b, 0x64, 0x61,
	0x6d, 0x61, 0x67, 0x65, 0x54, 0x61, 0x6b, 0x65, 0x6e, 0x4f, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x1b, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x61, 0x6b, 0x65, 0x6e, 0x4f, 0x6e, 0x54, 0x65,
	0x61, 0x6d, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x1c,
	0x6d, 0x61, 0x78, 0x43, 0x73, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x4f, 0x6e,
	0x4c, 0x61, 0x6e, 0x65, 0x4f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x1c, 0x6d, 0x61, 0x78, 0x43, 0x73, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x4f, 0x6e, 0x4c, 0x61, 0x6e, 0x65, 0x4f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x12, 0x3a, 0x0a, 0x18, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x65, 0x61, 0x64,
	0x4c, 0x61, 0x6e, 0x65, 0x4f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x18, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x65, 0x61, 0x64,
	0x4c, 0x61, 0x6e, 0x65, 0x4f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x22, 0xa7, 0x01, 0x0a,
	0x0b, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x50, 0x65, 0x72, 0x6b, 0x73, 0x12, 0x4e, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x74, 0x50, 0x65, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x73, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x2e, 0x6c, 0x6f, 0x6c, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x50, 0x65, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x50, 0x65, 0x72, 0x6b, 0x73, 0x12, 0x48, 0x0a, 0x06,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73,
	0x63, 0x79, 0x6c, 0x6c, 0x61, 0x2e, 0x6c, 0x6f, 0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x63, 0x79, 0x6c, 0x6c, 0x61, 0x50, 0x65, 0x72, 0x6b, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x06,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x22, 0x59, 0x0a, 0x0f, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61,
	0x50, 0x65, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66,
	0x65, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x66, 0x65,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x66, 0x6c, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x66, 0x66, 0x65, 0x6e,
	0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x65, 0x6e, 0x73,
	0x65, 0x22, 0xa4, 0x01, 0x0a, 0x0f, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x50, 0x65, 0x72, 0x6b,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x59, 0x0a, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x73, 0x63,
	0x79, 0x6c, 0x6c, 0x61, 0x2e, 0x6c, 0x6f, 0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63,
	0x79, 0x6c, 0x6c, 0x61, 0x50, 0x65, 0x72, 0x6b, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x22, 0x6a, 0x0a, 0x18, 0x53, 0x63, 0x79, 0x6c,
	0x6c, 0x61, 0x50, 0x65, 0x72, 0x6b, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x65, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x65, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x31,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x61, 0x72, 0x31, 0x12, 0x12, 0x0a, 0x04,
	0x76, 0x61, 0x72, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x61, 0x72, 0x32,
	0x12, 0x12, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x76, 0x61, 0x72, 0x33, 0x32, 0xb9, 0x04, 0x0a, 0x1e, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x9a, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x3f, 0x2e, 0x73, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x2e,
	0x6c, 0x6f, 0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x39, 0x2e, 0x73, 0x63, 0x79, 0x6c, 0x6c, 0x61,
	0x2e, 0x6c, 0x6f, 0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0x00, 0x12, 0x8f, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x3b, 0x2e,
	0x73, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x2e, 0x6c, 0x6f, 0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x38, 0x2e, 0x73, 0x63, 0x79,
	0x6c, 0x6c, 0x61, 0x2e, 0x6c, 0x6f, 0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x79,
	0x6c, 0x6c, 0x61, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x17, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x41, 0x2e, 0x73, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x2e, 0x6c, 0x6f, 0x6c, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x70,
	0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x3b, 0x2e, 0x73, 0x63, 0x79, 0x6c,
	0x6c, 0x61, 0x2e, 0x6c, 0x6f, 0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x79, 0x6c,
	0x6c, 0x61, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x42, 0x30, 0x5a, 0x2e, 0x6d, 0x65, 0x65, 0x70, 0x2e, 0x67, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x73, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x2f, 0x6c, 0x6f, 0x6c, 0x2f, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2f,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_scylla_lol_participantdetail_v1_participantdetail_proto_rawDescOnce sync.Once
	file_scylla_lol_participantdetail_v1_participantdetail_proto_rawDescData = file_scylla_lol_participantdetail_v1_participantdetail_proto_rawDesc
)

func file_scylla_lol_participantdetail_v1_participantdetail_proto_rawDescGZIP() []byte {
	file_scylla_lol_participantdetail_v1_participantdetail_proto_rawDescOnce.Do(func() {
		file_scylla_lol_participantdetail_v1_participantdetail_proto_rawDescData = protoimpl.X.CompressGZIP(file_scylla_lol_participantdetail_v1_participantdetail_proto_rawDescData)
	})
	return file_scylla_lol_participantdetail_v1_participantdetail_proto_rawDescData
}

var file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_scylla_lol_participantdetail_v1_participantdetail_proto_goTypes = []interface{}{
	(*ScyllaUpsertParticipantdetailReq)(nil), // 0: scylla.lol.participantdetail.v1.ScyllaUpsertParticipantdetailReq
	(*ScyllaParticipantdetails)(nil),         // 1: scylla.lol.participantdetail.v1.ScyllaParticipantdetails
	(*ScyllaGetParticipantdetailsReq)(nil),   // 2: scylla.lol.participantdetail.v1.ScyllaGetParticipantdetailsReq
	(*ScyllaParticipantdetailReq)(nil),       // 3: scylla.lol.participantdetail.v1.ScyllaParticipantdetailReq
	(*ScyllaParticipantdetail)(nil),          // 4: scylla.lol.participantdetail.v1.ScyllaParticipantdetail
	(*ScyllaPerks)(nil),                      // 5: scylla.lol.participantdetail.v1.ScyllaPerks
	(*ScyllaPerkStats)(nil),                  // 6: scylla.lol.participantdetail.v1.ScyllaPerkStats
	(*ScyllaPerkStyle)(nil),                  // 7: scylla.lol.participantdetail.v1.ScyllaPerkStyle
	(*ScyllaPerkStyleSelection)(nil),         // 8: scylla.lol.participantdetail.v1.ScyllaPerkStyleSelection
	(*emptypb.Empty)(nil),                    // 9: google.protobuf.Empty
}
var file_scylla_lol_participantdetail_v1_participantdetail_proto_depIdxs = []int32{
	4,  // 0: scylla.lol.participantdetail.v1.ScyllaUpsertParticipantdetailReq.detail:type_name -> scylla.lol.participantdetail.v1.ScyllaParticipantdetail
	4,  // 1: scylla.lol.participantdetail.v1.ScyllaParticipantdetails.details:type_name -> scylla.lol.participantdetail.v1.ScyllaParticipantdetail
	5,  // 2: scylla.lol.participantdetail.v1.ScyllaParticipantdetail.perks:type_name -> scylla.lol.participantdetail.v1.ScyllaPerks
	6,  // 3: scylla.lol.participantdetail.v1.ScyllaPerks.statPerks:type_name -> scylla.lol.participantdetail.v1.ScyllaPerkStats
	7,  // 4: scylla.lol.participantdetail.v1.ScyllaPerks.styles:type_name -> scylla.lol.participantdetail.v1.ScyllaPerkStyle
	8,  // 5: scylla.lol.participantdetail.v1.ScyllaPerkStyle.selections:type_name -> scylla.lol.participantdetail.v1.ScyllaPerkStyleSelection
	2,  // 6: scylla.lol.participantdetail.v1.ScyllaParticipantdetailService.GetMatchParticipantsdetail:input_type -> scylla.lol.participantdetail.v1.ScyllaGetParticipantdetailsReq
	3,  // 7: scylla.lol.participantdetail.v1.ScyllaParticipantdetailService.GetParticipantdetail:input_type -> scylla.lol.participantdetail.v1.ScyllaParticipantdetailReq
	0,  // 8: scylla.lol.participantdetail.v1.ScyllaParticipantdetailService.UpsertParticipantdetail:input_type -> scylla.lol.participantdetail.v1.ScyllaUpsertParticipantdetailReq
	3,  // 9: scylla.lol.participantdetail.v1.ScyllaParticipantdetailService.DeleteParticipantdetail:input_type -> scylla.lol.participantdetail.v1.ScyllaParticipantdetailReq
	1,  // 10: scylla.lol.participantdetail.v1.ScyllaParticipantdetailService.GetMatchParticipantsdetail:output_type -> scylla.lol.participantdetail.v1.ScyllaParticipantdetails
	4,  // 11: scylla.lol.participantdetail.v1.ScyllaParticipantdetailService.GetParticipantdetail:output_type -> scylla.lol.participantdetail.v1.ScyllaParticipantdetail
	9,  // 12: scylla.lol.participantdetail.v1.ScyllaParticipantdetailService.UpsertParticipantdetail:output_type -> google.protobuf.Empty
	9,  // 13: scylla.lol.participantdetail.v1.ScyllaParticipantdetailService.DeleteParticipantdetail:output_type -> google.protobuf.Empty
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_scylla_lol_participantdetail_v1_participantdetail_proto_init() }
func file_scylla_lol_participantdetail_v1_participantdetail_proto_init() {
	if File_scylla_lol_participantdetail_v1_participantdetail_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScyllaUpsertParticipantdetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScyllaParticipantdetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScyllaGetParticipantdetailsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScyllaParticipantdetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScyllaParticipantdetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScyllaPerks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScyllaPerkStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScyllaPerkStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScyllaPerkStyleSelection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_scylla_lol_participantdetail_v1_participantdetail_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_scylla_lol_participantdetail_v1_participantdetail_proto_goTypes,
		DependencyIndexes: file_scylla_lol_participantdetail_v1_participantdetail_proto_depIdxs,
		MessageInfos:      file_scylla_lol_participantdetail_v1_participantdetail_proto_msgTypes,
	}.Build()
	File_scylla_lol_participantdetail_v1_participantdetail_proto = out.File
	file_scylla_lol_participantdetail_v1_participantdetail_proto_rawDesc = nil
	file_scylla_lol_participantdetail_v1_participantdetail_proto_goTypes = nil
	file_scylla_lol_participantdetail_v1_participantdetail_proto_depIdxs = nil
}
