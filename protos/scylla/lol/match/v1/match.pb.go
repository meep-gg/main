// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.1
// source: scylla/lol/match/v1/match.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScyllaUpsertMatchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string       `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Match  *ScyllaMatch `protobuf:"bytes,2,opt,name=match,proto3" json:"match,omitempty"`
}

func (x *ScyllaUpsertMatchReq) Reset() {
	*x = ScyllaUpsertMatchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scylla_lol_match_v1_match_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScyllaUpsertMatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScyllaUpsertMatchReq) ProtoMessage() {}

func (x *ScyllaUpsertMatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_scylla_lol_match_v1_match_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScyllaUpsertMatchReq.ProtoReflect.Descriptor instead.
func (*ScyllaUpsertMatchReq) Descriptor() ([]byte, []int) {
	return file_scylla_lol_match_v1_match_proto_rawDescGZIP(), []int{0}
}

func (x *ScyllaUpsertMatchReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ScyllaUpsertMatchReq) GetMatch() *ScyllaMatch {
	if x != nil {
		return x.Match
	}
	return nil
}

type ScyllaGetMatchesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region  string  `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	GameIds []int64 `protobuf:"varint,2,rep,packed,name=gameIds,proto3" json:"gameIds,omitempty"`
}

func (x *ScyllaGetMatchesReq) Reset() {
	*x = ScyllaGetMatchesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scylla_lol_match_v1_match_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScyllaGetMatchesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScyllaGetMatchesReq) ProtoMessage() {}

func (x *ScyllaGetMatchesReq) ProtoReflect() protoreflect.Message {
	mi := &file_scylla_lol_match_v1_match_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScyllaGetMatchesReq.ProtoReflect.Descriptor instead.
func (*ScyllaGetMatchesReq) Descriptor() ([]byte, []int) {
	return file_scylla_lol_match_v1_match_proto_rawDescGZIP(), []int{1}
}

func (x *ScyllaGetMatchesReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ScyllaGetMatchesReq) GetGameIds() []int64 {
	if x != nil {
		return x.GameIds
	}
	return nil
}

type ScyllaMatches struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matches []*ScyllaMatch `protobuf:"bytes,1,rep,name=matches,proto3" json:"matches,omitempty"`
}

func (x *ScyllaMatches) Reset() {
	*x = ScyllaMatches{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scylla_lol_match_v1_match_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScyllaMatches) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScyllaMatches) ProtoMessage() {}

func (x *ScyllaMatches) ProtoReflect() protoreflect.Message {
	mi := &file_scylla_lol_match_v1_match_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScyllaMatches.ProtoReflect.Descriptor instead.
func (*ScyllaMatches) Descriptor() ([]byte, []int) {
	return file_scylla_lol_match_v1_match_proto_rawDescGZIP(), []int{2}
}

func (x *ScyllaMatches) GetMatches() []*ScyllaMatch {
	if x != nil {
		return x.Matches
	}
	return nil
}

type ScyllaMatchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	GameId int64  `protobuf:"varint,2,opt,name=gameId,proto3" json:"gameId,omitempty"`
}

func (x *ScyllaMatchReq) Reset() {
	*x = ScyllaMatchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scylla_lol_match_v1_match_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScyllaMatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScyllaMatchReq) ProtoMessage() {}

func (x *ScyllaMatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_scylla_lol_match_v1_match_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScyllaMatchReq.ProtoReflect.Descriptor instead.
func (*ScyllaMatchReq) Descriptor() ([]byte, []int) {
	return file_scylla_lol_match_v1_match_proto_rawDescGZIP(), []int{3}
}

func (x *ScyllaMatchReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ScyllaMatchReq) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

type ScyllaMatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId           int64                     `protobuf:"varint,1,opt,name=gameId,proto3" json:"gameId,omitempty"`
	GameDuration     int32                     `protobuf:"varint,2,opt,name=gameDuration,proto3" json:"gameDuration,omitempty"`
	GameEndTimestamp int64                     `protobuf:"varint,3,opt,name=gameEndTimestamp,proto3" json:"gameEndTimestamp,omitempty"`
	Season           int32                     `protobuf:"varint,4,opt,name=season,proto3" json:"season,omitempty"`
	Patch            int32                     `protobuf:"varint,5,opt,name=patch,proto3" json:"patch,omitempty"`
	Rank             int32                     `protobuf:"varint,6,opt,name=rank,proto3" json:"rank,omitempty"`
	QueueId          int32                     `protobuf:"varint,7,opt,name=queueId,proto3" json:"queueId,omitempty"`
	Bans             []int32                   `protobuf:"varint,8,rep,packed,name=bans,proto3" json:"bans,omitempty"`
	Participants     []*ScyllaMatchParticipant `protobuf:"bytes,9,rep,name=participants,proto3" json:"participants,omitempty"`
}

func (x *ScyllaMatch) Reset() {
	*x = ScyllaMatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scylla_lol_match_v1_match_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScyllaMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScyllaMatch) ProtoMessage() {}

func (x *ScyllaMatch) ProtoReflect() protoreflect.Message {
	mi := &file_scylla_lol_match_v1_match_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScyllaMatch.ProtoReflect.Descriptor instead.
func (*ScyllaMatch) Descriptor() ([]byte, []int) {
	return file_scylla_lol_match_v1_match_proto_rawDescGZIP(), []int{4}
}

func (x *ScyllaMatch) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *ScyllaMatch) GetGameDuration() int32 {
	if x != nil {
		return x.GameDuration
	}
	return 0
}

func (x *ScyllaMatch) GetGameEndTimestamp() int64 {
	if x != nil {
		return x.GameEndTimestamp
	}
	return 0
}

func (x *ScyllaMatch) GetSeason() int32 {
	if x != nil {
		return x.Season
	}
	return 0
}

func (x *ScyllaMatch) GetPatch() int32 {
	if x != nil {
		return x.Patch
	}
	return 0
}

func (x *ScyllaMatch) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *ScyllaMatch) GetQueueId() int32 {
	if x != nil {
		return x.QueueId
	}
	return 0
}

func (x *ScyllaMatch) GetBans() []int32 {
	if x != nil {
		return x.Bans
	}
	return nil
}

func (x *ScyllaMatch) GetParticipants() []*ScyllaMatchParticipant {
	if x != nil {
		return x.Participants
	}
	return nil
}

type ScyllaMatchParticipant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Puuid      string `protobuf:"bytes,1,opt,name=puuid,proto3" json:"puuid,omitempty"`
	GameName   string `protobuf:"bytes,2,opt,name=gameName,proto3" json:"gameName,omitempty"`
	TagLine    string `protobuf:"bytes,3,opt,name=tagLine,proto3" json:"tagLine,omitempty"`
	ChampionId int32  `protobuf:"varint,4,opt,name=championId,proto3" json:"championId,omitempty"`
}

func (x *ScyllaMatchParticipant) Reset() {
	*x = ScyllaMatchParticipant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scylla_lol_match_v1_match_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScyllaMatchParticipant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScyllaMatchParticipant) ProtoMessage() {}

func (x *ScyllaMatchParticipant) ProtoReflect() protoreflect.Message {
	mi := &file_scylla_lol_match_v1_match_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScyllaMatchParticipant.ProtoReflect.Descriptor instead.
func (*ScyllaMatchParticipant) Descriptor() ([]byte, []int) {
	return file_scylla_lol_match_v1_match_proto_rawDescGZIP(), []int{5}
}

func (x *ScyllaMatchParticipant) GetPuuid() string {
	if x != nil {
		return x.Puuid
	}
	return ""
}

func (x *ScyllaMatchParticipant) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *ScyllaMatchParticipant) GetTagLine() string {
	if x != nil {
		return x.TagLine
	}
	return ""
}

func (x *ScyllaMatchParticipant) GetChampionId() int32 {
	if x != nil {
		return x.ChampionId
	}
	return 0
}

var File_scylla_lol_match_v1_match_proto protoreflect.FileDescriptor

var file_scylla_lol_match_v1_match_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x73, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x2f, 0x6c, 0x6f, 0x6c, 0x2f, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x13, 0x73, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x2e, 0x6c, 0x6f, 0x6c, 0x2e, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x66, 0x0a, 0x14, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x2e, 0x6c, 0x6f, 0x6c, 0x2e,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x22, 0x47, 0x0a, 0x13, 0x53,
	0x63, 0x79, 0x6c, 0x6c, 0x61, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61,
	0x6d, 0x65, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x67, 0x61, 0x6d,
	0x65, 0x49, 0x64, 0x73, 0x22, 0x4b, 0x0a, 0x0d, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x2e,
	0x6c, 0x6f, 0x6c, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x79,
	0x6c, 0x6c, 0x61, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x73, 0x22, 0x40, 0x0a, 0x0e, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x61, 0x6d,
	0x65, 0x49, 0x64, 0x22, 0xb6, 0x02, 0x0a, 0x0b, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x67,
	0x61, 0x6d, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2a, 0x0a, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x45,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e,
	0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x18, 0x0a,
	0x07, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x61, 0x6e, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x05, 0x52, 0x04, 0x62, 0x61, 0x6e, 0x73, 0x12, 0x4f, 0x0a, 0x0c, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x2e, 0x6c, 0x6f, 0x6c, 0x2e, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x0c,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x22, 0x84, 0x01, 0x0a,
	0x16, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x67,
	0x4c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4c,
	0x69, 0x6e, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x32, 0xb6, 0x03, 0x0a, 0x12, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x0a, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x23, 0x2e, 0x73, 0x63, 0x79, 0x6c, 0x6c,
	0x61, 0x2e, 0x6c, 0x6f, 0x6c, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x63, 0x79, 0x6c, 0x6c, 0x61, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x12, 0x23, 0x2e, 0x73, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x2e, 0x6c, 0x6f, 0x6c,
	0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x73, 0x63, 0x79, 0x6c, 0x6c,
	0x61, 0x2e, 0x6c, 0x6f, 0x6c, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x63, 0x79, 0x6c, 0x6c, 0x61, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x28, 0x2e, 0x73, 0x63, 0x79,
	0x6c, 0x6c, 0x61, 0x2e, 0x6c, 0x6f, 0x6c, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x73, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x2e, 0x6c, 0x6f,
	0x6c, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x79, 0x6c, 0x6c,
	0x61, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0b, 0x55, 0x70,
	0x73, 0x65, 0x72, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x29, 0x2e, 0x73, 0x63, 0x79, 0x6c,
	0x6c, 0x61, 0x2e, 0x6c, 0x6f, 0x6c, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4c,
	0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x23, 0x2e,
	0x73, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x2e, 0x6c, 0x6f, 0x6c, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x24, 0x5a, 0x22,
	0x6d, 0x65, 0x65, 0x70, 0x2e, 0x67, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73,
	0x63, 0x79, 0x6c, 0x6c, 0x61, 0x2f, 0x6c, 0x6f, 0x6c, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2f,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_scylla_lol_match_v1_match_proto_rawDescOnce sync.Once
	file_scylla_lol_match_v1_match_proto_rawDescData = file_scylla_lol_match_v1_match_proto_rawDesc
)

func file_scylla_lol_match_v1_match_proto_rawDescGZIP() []byte {
	file_scylla_lol_match_v1_match_proto_rawDescOnce.Do(func() {
		file_scylla_lol_match_v1_match_proto_rawDescData = protoimpl.X.CompressGZIP(file_scylla_lol_match_v1_match_proto_rawDescData)
	})
	return file_scylla_lol_match_v1_match_proto_rawDescData
}

var file_scylla_lol_match_v1_match_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_scylla_lol_match_v1_match_proto_goTypes = []interface{}{
	(*ScyllaUpsertMatchReq)(nil),   // 0: scylla.lol.match.v1.ScyllaUpsertMatchReq
	(*ScyllaGetMatchesReq)(nil),    // 1: scylla.lol.match.v1.ScyllaGetMatchesReq
	(*ScyllaMatches)(nil),          // 2: scylla.lol.match.v1.ScyllaMatches
	(*ScyllaMatchReq)(nil),         // 3: scylla.lol.match.v1.ScyllaMatchReq
	(*ScyllaMatch)(nil),            // 4: scylla.lol.match.v1.ScyllaMatch
	(*ScyllaMatchParticipant)(nil), // 5: scylla.lol.match.v1.ScyllaMatchParticipant
	(*emptypb.Empty)(nil),          // 6: google.protobuf.Empty
}
var file_scylla_lol_match_v1_match_proto_depIdxs = []int32{
	4, // 0: scylla.lol.match.v1.ScyllaUpsertMatchReq.match:type_name -> scylla.lol.match.v1.ScyllaMatch
	4, // 1: scylla.lol.match.v1.ScyllaMatches.matches:type_name -> scylla.lol.match.v1.ScyllaMatch
	5, // 2: scylla.lol.match.v1.ScyllaMatch.participants:type_name -> scylla.lol.match.v1.ScyllaMatchParticipant
	3, // 3: scylla.lol.match.v1.ScyllaMatchService.CheckMatch:input_type -> scylla.lol.match.v1.ScyllaMatchReq
	3, // 4: scylla.lol.match.v1.ScyllaMatchService.GetMatch:input_type -> scylla.lol.match.v1.ScyllaMatchReq
	1, // 5: scylla.lol.match.v1.ScyllaMatchService.GetMatches:input_type -> scylla.lol.match.v1.ScyllaGetMatchesReq
	0, // 6: scylla.lol.match.v1.ScyllaMatchService.UpsertMatch:input_type -> scylla.lol.match.v1.ScyllaUpsertMatchReq
	3, // 7: scylla.lol.match.v1.ScyllaMatchService.DeleteMatch:input_type -> scylla.lol.match.v1.ScyllaMatchReq
	6, // 8: scylla.lol.match.v1.ScyllaMatchService.CheckMatch:output_type -> google.protobuf.Empty
	4, // 9: scylla.lol.match.v1.ScyllaMatchService.GetMatch:output_type -> scylla.lol.match.v1.ScyllaMatch
	2, // 10: scylla.lol.match.v1.ScyllaMatchService.GetMatches:output_type -> scylla.lol.match.v1.ScyllaMatches
	6, // 11: scylla.lol.match.v1.ScyllaMatchService.UpsertMatch:output_type -> google.protobuf.Empty
	6, // 12: scylla.lol.match.v1.ScyllaMatchService.DeleteMatch:output_type -> google.protobuf.Empty
	8, // [8:13] is the sub-list for method output_type
	3, // [3:8] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_scylla_lol_match_v1_match_proto_init() }
func file_scylla_lol_match_v1_match_proto_init() {
	if File_scylla_lol_match_v1_match_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_scylla_lol_match_v1_match_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScyllaUpsertMatchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scylla_lol_match_v1_match_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScyllaGetMatchesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scylla_lol_match_v1_match_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScyllaMatches); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scylla_lol_match_v1_match_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScyllaMatchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scylla_lol_match_v1_match_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScyllaMatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scylla_lol_match_v1_match_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScyllaMatchParticipant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_scylla_lol_match_v1_match_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_scylla_lol_match_v1_match_proto_goTypes,
		DependencyIndexes: file_scylla_lol_match_v1_match_proto_depIdxs,
		MessageInfos:      file_scylla_lol_match_v1_match_proto_msgTypes,
	}.Build()
	File_scylla_lol_match_v1_match_proto = out.File
	file_scylla_lol_match_v1_match_proto_rawDesc = nil
	file_scylla_lol_match_v1_match_proto_goTypes = nil
	file_scylla_lol_match_v1_match_proto_depIdxs = nil
}
