// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.1
// source: scylla/lol/participant/v1/participant.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScyllaMatchParticipantsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string   `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	GameId int64    `protobuf:"varint,2,opt,name=gameId,proto3" json:"gameId,omitempty"`
	Puuids []string `protobuf:"bytes,3,rep,name=puuids,proto3" json:"puuids,omitempty"`
}

func (x *ScyllaMatchParticipantsReq) Reset() {
	*x = ScyllaMatchParticipantsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scylla_lol_participant_v1_participant_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScyllaMatchParticipantsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScyllaMatchParticipantsReq) ProtoMessage() {}

func (x *ScyllaMatchParticipantsReq) ProtoReflect() protoreflect.Message {
	mi := &file_scylla_lol_participant_v1_participant_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScyllaMatchParticipantsReq.ProtoReflect.Descriptor instead.
func (*ScyllaMatchParticipantsReq) Descriptor() ([]byte, []int) {
	return file_scylla_lol_participant_v1_participant_proto_rawDescGZIP(), []int{0}
}

func (x *ScyllaMatchParticipantsReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ScyllaMatchParticipantsReq) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *ScyllaMatchParticipantsReq) GetPuuids() []string {
	if x != nil {
		return x.Puuids
	}
	return nil
}

type ScyllaPaginateParticipantsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Puuid  string `protobuf:"bytes,2,opt,name=puuid,proto3" json:"puuid,omitempty"`
	GameId int64  `protobuf:"varint,3,opt,name=gameId,proto3" json:"gameId,omitempty"`
	Count  int32  `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ScyllaPaginateParticipantsReq) Reset() {
	*x = ScyllaPaginateParticipantsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scylla_lol_participant_v1_participant_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScyllaPaginateParticipantsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScyllaPaginateParticipantsReq) ProtoMessage() {}

func (x *ScyllaPaginateParticipantsReq) ProtoReflect() protoreflect.Message {
	mi := &file_scylla_lol_participant_v1_participant_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScyllaPaginateParticipantsReq.ProtoReflect.Descriptor instead.
func (*ScyllaPaginateParticipantsReq) Descriptor() ([]byte, []int) {
	return file_scylla_lol_participant_v1_participant_proto_rawDescGZIP(), []int{1}
}

func (x *ScyllaPaginateParticipantsReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ScyllaPaginateParticipantsReq) GetPuuid() string {
	if x != nil {
		return x.Puuid
	}
	return ""
}

func (x *ScyllaPaginateParticipantsReq) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *ScyllaPaginateParticipantsReq) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ScyllaUpsertParticipantReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region      string             `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Participant *ScyllaParticipant `protobuf:"bytes,2,opt,name=participant,proto3" json:"participant,omitempty"`
}

func (x *ScyllaUpsertParticipantReq) Reset() {
	*x = ScyllaUpsertParticipantReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scylla_lol_participant_v1_participant_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScyllaUpsertParticipantReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScyllaUpsertParticipantReq) ProtoMessage() {}

func (x *ScyllaUpsertParticipantReq) ProtoReflect() protoreflect.Message {
	mi := &file_scylla_lol_participant_v1_participant_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScyllaUpsertParticipantReq.ProtoReflect.Descriptor instead.
func (*ScyllaUpsertParticipantReq) Descriptor() ([]byte, []int) {
	return file_scylla_lol_participant_v1_participant_proto_rawDescGZIP(), []int{2}
}

func (x *ScyllaUpsertParticipantReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ScyllaUpsertParticipantReq) GetParticipant() *ScyllaParticipant {
	if x != nil {
		return x.Participant
	}
	return nil
}

type ScyllaParticipantReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Puuid  string `protobuf:"bytes,2,opt,name=puuid,proto3" json:"puuid,omitempty"`
	GameId int64  `protobuf:"varint,3,opt,name=gameId,proto3" json:"gameId,omitempty"`
}

func (x *ScyllaParticipantReq) Reset() {
	*x = ScyllaParticipantReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scylla_lol_participant_v1_participant_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScyllaParticipantReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScyllaParticipantReq) ProtoMessage() {}

func (x *ScyllaParticipantReq) ProtoReflect() protoreflect.Message {
	mi := &file_scylla_lol_participant_v1_participant_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScyllaParticipantReq.ProtoReflect.Descriptor instead.
func (*ScyllaParticipantReq) Descriptor() ([]byte, []int) {
	return file_scylla_lol_participant_v1_participant_proto_rawDescGZIP(), []int{3}
}

func (x *ScyllaParticipantReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ScyllaParticipantReq) GetPuuid() string {
	if x != nil {
		return x.Puuid
	}
	return ""
}

func (x *ScyllaParticipantReq) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

type ScyllaGetParticipantsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Puuid  string `protobuf:"bytes,2,opt,name=puuid,proto3" json:"puuid,omitempty"`
}

func (x *ScyllaGetParticipantsReq) Reset() {
	*x = ScyllaGetParticipantsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scylla_lol_participant_v1_participant_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScyllaGetParticipantsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScyllaGetParticipantsReq) ProtoMessage() {}

func (x *ScyllaGetParticipantsReq) ProtoReflect() protoreflect.Message {
	mi := &file_scylla_lol_participant_v1_participant_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScyllaGetParticipantsReq.ProtoReflect.Descriptor instead.
func (*ScyllaGetParticipantsReq) Descriptor() ([]byte, []int) {
	return file_scylla_lol_participant_v1_participant_proto_rawDescGZIP(), []int{4}
}

func (x *ScyllaGetParticipantsReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ScyllaGetParticipantsReq) GetPuuid() string {
	if x != nil {
		return x.Puuid
	}
	return ""
}

type ScyllaParticipants struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Participants []*ScyllaParticipant `protobuf:"bytes,1,rep,name=participants,proto3" json:"participants,omitempty"`
}

func (x *ScyllaParticipants) Reset() {
	*x = ScyllaParticipants{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scylla_lol_participant_v1_participant_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScyllaParticipants) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScyllaParticipants) ProtoMessage() {}

func (x *ScyllaParticipants) ProtoReflect() protoreflect.Message {
	mi := &file_scylla_lol_participant_v1_participant_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScyllaParticipants.ProtoReflect.Descriptor instead.
func (*ScyllaParticipants) Descriptor() ([]byte, []int) {
	return file_scylla_lol_participant_v1_participant_proto_rawDescGZIP(), []int{5}
}

func (x *ScyllaParticipants) GetParticipants() []*ScyllaParticipant {
	if x != nil {
		return x.Participants
	}
	return nil
}

type ScyllaParticipant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Puuid                       string  `protobuf:"bytes,1,opt,name=puuid,proto3" json:"puuid,omitempty"`
	GameId                      int64   `protobuf:"varint,2,opt,name=gameId,proto3" json:"gameId,omitempty"`
	ChampionId                  int32   `protobuf:"varint,3,opt,name=championId,proto3" json:"championId,omitempty"`
	ChampLevel                  int32   `protobuf:"varint,4,opt,name=champLevel,proto3" json:"champLevel,omitempty"`
	Kda                         float32 `protobuf:"fixed32,5,opt,name=kda,proto3" json:"kda,omitempty"`
	Kills                       int32   `protobuf:"varint,6,opt,name=kills,proto3" json:"kills,omitempty"`
	Deaths                      int32   `protobuf:"varint,7,opt,name=deaths,proto3" json:"deaths,omitempty"`
	Assists                     int32   `protobuf:"varint,8,opt,name=assists,proto3" json:"assists,omitempty"`
	GoldEarned                  int32   `protobuf:"varint,9,opt,name=goldEarned,proto3" json:"goldEarned,omitempty"`
	GoldPerMinute               float32 `protobuf:"fixed32,10,opt,name=goldPerMinute,proto3" json:"goldPerMinute,omitempty"`
	TotalMinionsKilled          int32   `protobuf:"varint,11,opt,name=totalMinionsKilled,proto3" json:"totalMinionsKilled,omitempty"`
	TotalDamageDealtToChampions int32   `protobuf:"varint,12,opt,name=totalDamageDealtToChampions,proto3" json:"totalDamageDealtToChampions,omitempty"`
	DamagePerMinute             float32 `protobuf:"fixed32,13,opt,name=damagePerMinute,proto3" json:"damagePerMinute,omitempty"`
	TotalDamageTaken            int32   `protobuf:"varint,14,opt,name=totalDamageTaken,proto3" json:"totalDamageTaken,omitempty"`
	TimeCCingOthers             int32   `protobuf:"varint,15,opt,name=timeCCingOthers,proto3" json:"timeCCingOthers,omitempty"`
	IndividualPosition          string  `protobuf:"bytes,16,opt,name=individualPosition,proto3" json:"individualPosition,omitempty"`
	Win                         bool    `protobuf:"varint,17,opt,name=win,proto3" json:"win,omitempty"`
	Rank                        int32   `protobuf:"varint,18,opt,name=rank,proto3" json:"rank,omitempty"`
	ParticipantId               int32   `protobuf:"varint,19,opt,name=ParticipantId,proto3" json:"ParticipantId,omitempty"`
	Item0                       int32   `protobuf:"varint,20,opt,name=item0,proto3" json:"item0,omitempty"`
	Item1                       int32   `protobuf:"varint,21,opt,name=item1,proto3" json:"item1,omitempty"`
	Item2                       int32   `protobuf:"varint,22,opt,name=item2,proto3" json:"item2,omitempty"`
	Item3                       int32   `protobuf:"varint,23,opt,name=item3,proto3" json:"item3,omitempty"`
	Item4                       int32   `protobuf:"varint,24,opt,name=item4,proto3" json:"item4,omitempty"`
	Item5                       int32   `protobuf:"varint,25,opt,name=item5,proto3" json:"item5,omitempty"`
	Item6                       int32   `protobuf:"varint,26,opt,name=item6,proto3" json:"item6,omitempty"`
	Summoner1Id                 int32   `protobuf:"varint,27,opt,name=summoner1Id,proto3" json:"summoner1Id,omitempty"`
	Summoner2Id                 int32   `protobuf:"varint,28,opt,name=summoner2Id,proto3" json:"summoner2Id,omitempty"`
	PrimaryStyle                int32   `protobuf:"varint,29,opt,name=primaryStyle,proto3" json:"primaryStyle,omitempty"`
	SubStyle                    int32   `protobuf:"varint,30,opt,name=subStyle,proto3" json:"subStyle,omitempty"`
	TeamId                      int32   `protobuf:"varint,31,opt,name=teamId,proto3" json:"teamId,omitempty"`
	Placement                   int32   `protobuf:"varint,32,opt,name=placement,proto3" json:"placement,omitempty"`
	PlayerAugment1              int32   `protobuf:"varint,33,opt,name=playerAugment1,proto3" json:"playerAugment1,omitempty"`
	PlayerAugment2              int32   `protobuf:"varint,34,opt,name=playerAugment2,proto3" json:"playerAugment2,omitempty"`
	PlayerAugment3              int32   `protobuf:"varint,35,opt,name=playerAugment3,proto3" json:"playerAugment3,omitempty"`
	PlayerAugment4              int32   `protobuf:"varint,36,opt,name=playerAugment4,proto3" json:"playerAugment4,omitempty"`
	PlayerSubteamId             int32   `protobuf:"varint,37,opt,name=playerSubteamId,proto3" json:"playerSubteamId,omitempty"`
	TeamDamagePercentage        float32 `protobuf:"fixed32,38,opt,name=teamDamagePercentage,proto3" json:"teamDamagePercentage,omitempty"`
	VisionScorePerMinute        float32 `protobuf:"fixed32,39,opt,name=visionScorePerMinute,proto3" json:"visionScorePerMinute,omitempty"`
	KillParticipation           float32 `protobuf:"fixed32,40,opt,name=killParticipation,proto3" json:"killParticipation,omitempty"`
	NeutralMinionsKilled        int32   `protobuf:"varint,41,opt,name=neutralMinionsKilled,proto3" json:"neutralMinionsKilled,omitempty"`
}

func (x *ScyllaParticipant) Reset() {
	*x = ScyllaParticipant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scylla_lol_participant_v1_participant_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScyllaParticipant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScyllaParticipant) ProtoMessage() {}

func (x *ScyllaParticipant) ProtoReflect() protoreflect.Message {
	mi := &file_scylla_lol_participant_v1_participant_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScyllaParticipant.ProtoReflect.Descriptor instead.
func (*ScyllaParticipant) Descriptor() ([]byte, []int) {
	return file_scylla_lol_participant_v1_participant_proto_rawDescGZIP(), []int{6}
}

func (x *ScyllaParticipant) GetPuuid() string {
	if x != nil {
		return x.Puuid
	}
	return ""
}

func (x *ScyllaParticipant) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *ScyllaParticipant) GetChampionId() int32 {
	if x != nil {
		return x.ChampionId
	}
	return 0
}

func (x *ScyllaParticipant) GetChampLevel() int32 {
	if x != nil {
		return x.ChampLevel
	}
	return 0
}

func (x *ScyllaParticipant) GetKda() float32 {
	if x != nil {
		return x.Kda
	}
	return 0
}

func (x *ScyllaParticipant) GetKills() int32 {
	if x != nil {
		return x.Kills
	}
	return 0
}

func (x *ScyllaParticipant) GetDeaths() int32 {
	if x != nil {
		return x.Deaths
	}
	return 0
}

func (x *ScyllaParticipant) GetAssists() int32 {
	if x != nil {
		return x.Assists
	}
	return 0
}

func (x *ScyllaParticipant) GetGoldEarned() int32 {
	if x != nil {
		return x.GoldEarned
	}
	return 0
}

func (x *ScyllaParticipant) GetGoldPerMinute() float32 {
	if x != nil {
		return x.GoldPerMinute
	}
	return 0
}

func (x *ScyllaParticipant) GetTotalMinionsKilled() int32 {
	if x != nil {
		return x.TotalMinionsKilled
	}
	return 0
}

func (x *ScyllaParticipant) GetTotalDamageDealtToChampions() int32 {
	if x != nil {
		return x.TotalDamageDealtToChampions
	}
	return 0
}

func (x *ScyllaParticipant) GetDamagePerMinute() float32 {
	if x != nil {
		return x.DamagePerMinute
	}
	return 0
}

func (x *ScyllaParticipant) GetTotalDamageTaken() int32 {
	if x != nil {
		return x.TotalDamageTaken
	}
	return 0
}

func (x *ScyllaParticipant) GetTimeCCingOthers() int32 {
	if x != nil {
		return x.TimeCCingOthers
	}
	return 0
}

func (x *ScyllaParticipant) GetIndividualPosition() string {
	if x != nil {
		return x.IndividualPosition
	}
	return ""
}

func (x *ScyllaParticipant) GetWin() bool {
	if x != nil {
		return x.Win
	}
	return false
}

func (x *ScyllaParticipant) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *ScyllaParticipant) GetParticipantId() int32 {
	if x != nil {
		return x.ParticipantId
	}
	return 0
}

func (x *ScyllaParticipant) GetItem0() int32 {
	if x != nil {
		return x.Item0
	}
	return 0
}

func (x *ScyllaParticipant) GetItem1() int32 {
	if x != nil {
		return x.Item1
	}
	return 0
}

func (x *ScyllaParticipant) GetItem2() int32 {
	if x != nil {
		return x.Item2
	}
	return 0
}

func (x *ScyllaParticipant) GetItem3() int32 {
	if x != nil {
		return x.Item3
	}
	return 0
}

func (x *ScyllaParticipant) GetItem4() int32 {
	if x != nil {
		return x.Item4
	}
	return 0
}

func (x *ScyllaParticipant) GetItem5() int32 {
	if x != nil {
		return x.Item5
	}
	return 0
}

func (x *ScyllaParticipant) GetItem6() int32 {
	if x != nil {
		return x.Item6
	}
	return 0
}

func (x *ScyllaParticipant) GetSummoner1Id() int32 {
	if x != nil {
		return x.Summoner1Id
	}
	return 0
}

func (x *ScyllaParticipant) GetSummoner2Id() int32 {
	if x != nil {
		return x.Summoner2Id
	}
	return 0
}

func (x *ScyllaParticipant) GetPrimaryStyle() int32 {
	if x != nil {
		return x.PrimaryStyle
	}
	return 0
}

func (x *ScyllaParticipant) GetSubStyle() int32 {
	if x != nil {
		return x.SubStyle
	}
	return 0
}

func (x *ScyllaParticipant) GetTeamId() int32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *ScyllaParticipant) GetPlacement() int32 {
	if x != nil {
		return x.Placement
	}
	return 0
}

func (x *ScyllaParticipant) GetPlayerAugment1() int32 {
	if x != nil {
		return x.PlayerAugment1
	}
	return 0
}

func (x *ScyllaParticipant) GetPlayerAugment2() int32 {
	if x != nil {
		return x.PlayerAugment2
	}
	return 0
}

func (x *ScyllaParticipant) GetPlayerAugment3() int32 {
	if x != nil {
		return x.PlayerAugment3
	}
	return 0
}

func (x *ScyllaParticipant) GetPlayerAugment4() int32 {
	if x != nil {
		return x.PlayerAugment4
	}
	return 0
}

func (x *ScyllaParticipant) GetPlayerSubteamId() int32 {
	if x != nil {
		return x.PlayerSubteamId
	}
	return 0
}

func (x *ScyllaParticipant) GetTeamDamagePercentage() float32 {
	if x != nil {
		return x.TeamDamagePercentage
	}
	return 0
}

func (x *ScyllaParticipant) GetVisionScorePerMinute() float32 {
	if x != nil {
		return x.VisionScorePerMinute
	}
	return 0
}

func (x *ScyllaParticipant) GetKillParticipation() float32 {
	if x != nil {
		return x.KillParticipation
	}
	return 0
}

func (x *ScyllaParticipant) GetNeutralMinionsKilled() int32 {
	if x != nil {
		return x.NeutralMinionsKilled
	}
	return 0
}

var File_scylla_lol_participant_v1_participant_proto protoreflect.FileDescriptor

var file_scylla_lol_participant_v1_participant_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x73, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x2f, 0x6c, 0x6f, 0x6c, 0x2f, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x73,
	0x63, 0x79, 0x6c, 0x6c, 0x61, 0x2e, 0x6c, 0x6f, 0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x64, 0x0a, 0x1a, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x61, 0x6d,
	0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x75, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x75, 0x69, 0x64, 0x73, 0x22, 0x7b, 0x0a, 0x1d, 0x53,
	0x63, 0x79, 0x6c, 0x6c, 0x61, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x75, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61,
	0x6d, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x1a, 0x53, 0x63, 0x79,
	0x6c, 0x6c, 0x61, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12,
	0x4e, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x2e, 0x6c, 0x6f,
	0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x22,
	0x5c, 0x0a, 0x14, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x75, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x48, 0x0a,
	0x18, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x75, 0x75, 0x69, 0x64, 0x22, 0x66, 0x0a, 0x12, 0x53, 0x63, 0x79, 0x6c, 0x6c,
	0x61, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x50, 0x0a,
	0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x2e, 0x6c, 0x6f, 0x6c,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x22,
	0xf7, 0x0a, 0x0a, 0x11, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x75, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x61, 0x6d,
	0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x64, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x03, 0x6b, 0x64, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x65, 0x61, 0x74, 0x68, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x64, 0x65, 0x61,
	0x74, 0x68, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x67, 0x6f, 0x6c, 0x64, 0x45, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x67, 0x6f, 0x6c, 0x64, 0x45, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x67, 0x6f, 0x6c, 0x64, 0x50, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x67, 0x6f, 0x6c, 0x64, 0x50, 0x65, 0x72, 0x4d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x69,
	0x6f, 0x6e, 0x73, 0x4b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x73, 0x4b, 0x69, 0x6c,
	0x6c, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x1b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x61, 0x6d, 0x61,
	0x67, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x74, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44,
	0x61, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x74, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x6d,
	0x70, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x50,
	0x65, 0x72, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f,
	0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12,
	0x2a, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x61,
	0x6b, 0x65, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x61, 0x6b, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x74,
	0x69, 0x6d, 0x65, 0x43, 0x43, 0x69, 0x6e, 0x67, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x73, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x43, 0x69, 0x6e, 0x67, 0x4f,
	0x74, 0x68, 0x65, 0x72, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64,
	0x75, 0x61, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x69, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x77, 0x69, 0x6e, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x03, 0x77, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x24, 0x0a, 0x0d, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x30, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x30, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x31,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x31, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x32, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x33, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x33, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x34, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x34, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x35, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x35, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x36, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x36, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x31, 0x49, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x31, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x32, 0x49, 0x64, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x32, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x75, 0x62, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41,
	0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x31, 0x18, 0x21, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x31, 0x12, 0x26, 0x0a,
	0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x32, 0x18,
	0x22, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x75, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x32, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41,
	0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x33, 0x18, 0x23, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x33, 0x12, 0x26, 0x0a,
	0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x34, 0x18,
	0x24, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x75, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x34, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x75, 0x62, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x25, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x75, 0x62, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12,
	0x32, 0x0a, 0x14, 0x74, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x02, 0x52, 0x14, 0x74,
	0x65, 0x61, 0x6d, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x50, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x27, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x14, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x65,
	0x72, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x6b, 0x69, 0x6c, 0x6c, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x11, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x14, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c,
	0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x73, 0x4b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x29, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x14, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x69,
	0x6f, 0x6e, 0x73, 0x4b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x32, 0xcf, 0x05, 0x0a, 0x18, 0x53, 0x63,
	0x79, 0x6c, 0x6c, 0x61, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x71, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x2f, 0x2e, 0x73, 0x63, 0x79, 0x6c, 0x6c,
	0x61, 0x2e, 0x6c, 0x6f, 0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x73, 0x63, 0x79, 0x6c,
	0x6c, 0x61, 0x2e, 0x6c, 0x6f, 0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x33, 0x2e, 0x73,
	0x63, 0x79, 0x6c, 0x6c, 0x61, 0x2e, 0x6c, 0x6f, 0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x2d, 0x2e, 0x73, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x2e, 0x6c, 0x6f, 0x6c, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63,
	0x79, 0x6c, 0x6c, 0x61, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73,
	0x22, 0x00, 0x12, 0x7e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x35, 0x2e, 0x73, 0x63, 0x79,
	0x6c, 0x6c, 0x61, 0x2e, 0x6c, 0x6f, 0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x2d, 0x2e, 0x73, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x2e, 0x6c, 0x6f, 0x6c, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63,
	0x79, 0x6c, 0x6c, 0x61, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73,
	0x22, 0x00, 0x12, 0x80, 0x01, 0x0a, 0x13, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x38, 0x2e, 0x73, 0x63, 0x79,
	0x6c, 0x6c, 0x61, 0x2e, 0x6c, 0x6f, 0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x73, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x2e, 0x6c, 0x6f,
	0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x73, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x11, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x35, 0x2e, 0x73, 0x63, 0x79,
	0x6c, 0x6c, 0x61, 0x2e, 0x6c, 0x6f, 0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x12, 0x2f, 0x2e, 0x73, 0x63, 0x79, 0x6c, 0x6c, 0x61, 0x2e, 0x6c, 0x6f, 0x6c, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x79,
	0x6c, 0x6c, 0x61, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x2a, 0x5a, 0x28, 0x6d,
	0x65, 0x65, 0x70, 0x2e, 0x67, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73, 0x63,
	0x79, 0x6c, 0x6c, 0x61, 0x2f, 0x6c, 0x6f, 0x6c, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_scylla_lol_participant_v1_participant_proto_rawDescOnce sync.Once
	file_scylla_lol_participant_v1_participant_proto_rawDescData = file_scylla_lol_participant_v1_participant_proto_rawDesc
)

func file_scylla_lol_participant_v1_participant_proto_rawDescGZIP() []byte {
	file_scylla_lol_participant_v1_participant_proto_rawDescOnce.Do(func() {
		file_scylla_lol_participant_v1_participant_proto_rawDescData = protoimpl.X.CompressGZIP(file_scylla_lol_participant_v1_participant_proto_rawDescData)
	})
	return file_scylla_lol_participant_v1_participant_proto_rawDescData
}

var file_scylla_lol_participant_v1_participant_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_scylla_lol_participant_v1_participant_proto_goTypes = []interface{}{
	(*ScyllaMatchParticipantsReq)(nil),    // 0: scylla.lol.participant.v1.ScyllaMatchParticipantsReq
	(*ScyllaPaginateParticipantsReq)(nil), // 1: scylla.lol.participant.v1.ScyllaPaginateParticipantsReq
	(*ScyllaUpsertParticipantReq)(nil),    // 2: scylla.lol.participant.v1.ScyllaUpsertParticipantReq
	(*ScyllaParticipantReq)(nil),          // 3: scylla.lol.participant.v1.ScyllaParticipantReq
	(*ScyllaGetParticipantsReq)(nil),      // 4: scylla.lol.participant.v1.ScyllaGetParticipantsReq
	(*ScyllaParticipants)(nil),            // 5: scylla.lol.participant.v1.ScyllaParticipants
	(*ScyllaParticipant)(nil),             // 6: scylla.lol.participant.v1.ScyllaParticipant
	(*emptypb.Empty)(nil),                 // 7: google.protobuf.Empty
}
var file_scylla_lol_participant_v1_participant_proto_depIdxs = []int32{
	6, // 0: scylla.lol.participant.v1.ScyllaUpsertParticipantReq.participant:type_name -> scylla.lol.participant.v1.ScyllaParticipant
	6, // 1: scylla.lol.participant.v1.ScyllaParticipants.participants:type_name -> scylla.lol.participant.v1.ScyllaParticipant
	3, // 2: scylla.lol.participant.v1.ScyllaParticipantService.GetParticipant:input_type -> scylla.lol.participant.v1.ScyllaParticipantReq
	4, // 3: scylla.lol.participant.v1.ScyllaParticipantService.GetParticipants:input_type -> scylla.lol.participant.v1.ScyllaGetParticipantsReq
	0, // 4: scylla.lol.participant.v1.ScyllaParticipantService.GetMatchParticipants:input_type -> scylla.lol.participant.v1.ScyllaMatchParticipantsReq
	1, // 5: scylla.lol.participant.v1.ScyllaParticipantService.PaginateParticipant:input_type -> scylla.lol.participant.v1.ScyllaPaginateParticipantsReq
	2, // 6: scylla.lol.participant.v1.ScyllaParticipantService.UpsertParticipant:input_type -> scylla.lol.participant.v1.ScyllaUpsertParticipantReq
	3, // 7: scylla.lol.participant.v1.ScyllaParticipantService.DeleteParticipant:input_type -> scylla.lol.participant.v1.ScyllaParticipantReq
	6, // 8: scylla.lol.participant.v1.ScyllaParticipantService.GetParticipant:output_type -> scylla.lol.participant.v1.ScyllaParticipant
	5, // 9: scylla.lol.participant.v1.ScyllaParticipantService.GetParticipants:output_type -> scylla.lol.participant.v1.ScyllaParticipants
	5, // 10: scylla.lol.participant.v1.ScyllaParticipantService.GetMatchParticipants:output_type -> scylla.lol.participant.v1.ScyllaParticipants
	5, // 11: scylla.lol.participant.v1.ScyllaParticipantService.PaginateParticipant:output_type -> scylla.lol.participant.v1.ScyllaParticipants
	7, // 12: scylla.lol.participant.v1.ScyllaParticipantService.UpsertParticipant:output_type -> google.protobuf.Empty
	7, // 13: scylla.lol.participant.v1.ScyllaParticipantService.DeleteParticipant:output_type -> google.protobuf.Empty
	8, // [8:14] is the sub-list for method output_type
	2, // [2:8] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_scylla_lol_participant_v1_participant_proto_init() }
func file_scylla_lol_participant_v1_participant_proto_init() {
	if File_scylla_lol_participant_v1_participant_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_scylla_lol_participant_v1_participant_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScyllaMatchParticipantsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scylla_lol_participant_v1_participant_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScyllaPaginateParticipantsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scylla_lol_participant_v1_participant_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScyllaUpsertParticipantReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scylla_lol_participant_v1_participant_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScyllaParticipantReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scylla_lol_participant_v1_participant_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScyllaGetParticipantsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scylla_lol_participant_v1_participant_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScyllaParticipants); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scylla_lol_participant_v1_participant_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScyllaParticipant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_scylla_lol_participant_v1_participant_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_scylla_lol_participant_v1_participant_proto_goTypes,
		DependencyIndexes: file_scylla_lol_participant_v1_participant_proto_depIdxs,
		MessageInfos:      file_scylla_lol_participant_v1_participant_proto_msgTypes,
	}.Build()
	File_scylla_lol_participant_v1_participant_proto = out.File
	file_scylla_lol_participant_v1_participant_proto_rawDesc = nil
	file_scylla_lol_participant_v1_participant_proto_goTypes = nil
	file_scylla_lol_participant_v1_participant_proto_depIdxs = nil
}
